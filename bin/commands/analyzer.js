/**
 * M√≥dulo de an√°lise de c√≥digo
 * Respons√°vel por analisar altera√ß√µes e exibir resultados
 */

import { analyzeChanges } from '../../dist/index.js';
import { ResultFormatter } from '../../dist/utils/formatter.js';
import chalk from 'chalk';
import gradient from 'gradient-string';
import boxen from 'boxen';

/**
 * Executa an√°lise de altera√ß√µes entre refer√™ncias Git
 * @param {Object} options - Op√ß√µes de configura√ß√£o
 * @param {string} options.base - Refer√™ncia base para compara√ß√£o
 * @param {string} options.head - Refer√™ncia alvo para compara√ß√£o
 * @param {boolean} options.json - Se deve exibir resultado em formato JSON
 * @param {boolean} options.verbose - Se deve exibir informa√ß√µes detalhadas
 * @returns {Promise<Object>} Resultado da an√°lise
 */
export async function executeAnalysis(options) {
  console.log(chalk.blue('üîç Analisando altera√ß√µes...'));
  console.log(chalk.yellow('‚ö†Ô∏è  Nota: Todos os arquivos ser√£o adicionados ao stage (git add .) para garantir an√°lise completa.'));
  
  const result = await analyzeChanges(options.base, options.head);
  
  if (options.json) {
    // Sa√≠da em formato JSON
    console.log(JSON.stringify(result, null, 2));
  } else {
    // Sa√≠da formatada para o console
    const formatter = new ResultFormatter();
    const output = formatter.format(result);
    console.log(output);
  }
  
  return result;
}
