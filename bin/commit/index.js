import { analyzeChangesAndFiles, groupFilesByType } from './analyzer.js';
import { displayChangeSummary, confirmCommits } from './ui.js';
import { executeCommits, displayCommitSummary } from './committer.js';
import chalk from 'chalk';

// Fun√ß√£o principal que orquestra todo o processo
export const runCommitProcess = async (options) => {
  // Analisar altera√ß√µes e obter resultados
  const result = await analyzeChangesAndFiles(options);
  
  // Agrupar arquivos por tipo
  const filesByType = groupFilesByType(result);
  
  // Exibir resumo das altera√ß√µes
  const hasChanges = displayChangeSummary(filesByType);
  
  // Se n√£o h√° altera√ß√µes, encerra o processo
  if (!hasChanges) {
    return;
  }
  
  // Se √© modo dry-run, mostrar mensagem
  if (options.dryRun) {
    console.log(chalk.cyan('\nüîç Modo dry-run: os comandos ser√£o exibidos, mas n√£o executados.'));
  } else if (options.autoComplete) {
    // Pular confirma√ß√£o em modo autoComplete
    console.log(chalk.blue('\nüîÑ Modo auto-complete: executando commits automaticamente sem confirma√ß√£o...'));
  } else {
    // Solicitar confirma√ß√£o para prosseguir
    const confirmed = await confirmCommits();
    if (!confirmed) {
      return;
    }
  }
  
  // Executar commits agrupados por tipo
  const commitResults = await executeCommits(filesByType, options);
  
  // Mostrar resumo final dos commits
  displayCommitSummary(commitResults, filesByType, options);
};
